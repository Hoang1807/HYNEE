package com.hynee.entity;
// Generated Jul 5, 2023, 11:01:33 AM by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.List;
import java.util.Set;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.ToString;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Nationalized;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "PRODUCT", schema = "dbo", catalog = "HYNEE")
@ToString
public class Product {

	private String productId;
	private Category category;
	private Discount discount;
	private String productCode;
	private String productName;
	private String productDescription;
	private Integer productQuantity;
	private String productSize;
	private String productColor;
	private int productPrice;
	private Boolean productStatus;
	private List<Feedback> feedbacks;
	private List<Detail> details;
	private List<Image> images;
	private List<InvoiceDetail> invoiceDetails;

	public Product() {
	}

	public Product(Category category, String productCode, String productName, String productSize, String productColor,
			int productPrice, String productDescription, Integer productQuantity, Boolean productStatus) {
		this.category = category;
		this.productCode = productCode;
		this.productName = productName;
		this.productSize = productSize;
		this.productDescription = productDescription;
		this.productQuantity = productQuantity;
		this.productColor = productColor;
		this.productStatus = productStatus;
		this.productPrice = productPrice;
	}

	public Product(Category category, String productCode, String productName, String productSize, String productColor,
			int productPrice) {
		this.category = category;
		this.productCode = productCode;
		this.productName = productName;
		this.productSize = productSize;
		this.productColor = productColor;
		this.productPrice = productPrice;
	}

	public Product(Category category, Discount discount, String productCode, String productName,
			String productDescription, Integer productQuantity, String productSize, String productColor,
			int productPrice, Boolean productStatus, List<Feedback> feedbacks, List<Detail> details, List<Image> images,
			List<InvoiceDetail> invoiceDetails) {
		this.category = category;
		this.discount = discount;
		this.productCode = productCode;
		this.productName = productName;
		this.productDescription = productDescription;
		this.productQuantity = productQuantity;
		this.productSize = productSize;
		this.productColor = productColor;
		this.productPrice = productPrice;
		this.productStatus = productStatus;
		this.feedbacks = feedbacks;
		this.details = details;
		this.images = images;
		this.invoiceDetails = invoiceDetails;
	}

	@Id
	@Column(name = "product_id", unique = true, nullable = false, length = 36)
	public String getProductId() {
		return this.productId;
	}

	public void setProductId(String productId) {
		this.productId = productId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "discount_id")
	public Discount getDiscount() {
		return this.discount;
	}

	public void setDiscount(Discount discount) {
		this.discount = discount;
	}

	@Column(name = "product_code", nullable = false, length = 20)
	public String getProductCode() {
		return this.productCode;
	}

	public void setProductCode(String productCode) {
		this.productCode = productCode;
	}

	@Column(name = "product_name", nullable = false)
	@Nationalized
	public String getProductName() {
		return this.productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	@Column(name = "product_description")
	@Nationalized
	public String getProductDescription() {
		return this.productDescription;
	}

	public void setProductDescription(String productDescription) {
		this.productDescription = productDescription;
	}

	@Column(name = "product_quantity")
	public Integer getProductQuantity() {
		return this.productQuantity;
	}

	public void setProductQuantity(Integer productQuantity) {
		this.productQuantity = productQuantity;
	}

	@Column(name = "product_size", nullable = false, length = 2)
	public String getProductSize() {
		return this.productSize;
	}

	public void setProductSize(String productSize) {
		this.productSize = productSize;
	}

	@Column(name = "product_color", nullable = false, length = 10)
	public String getProductColor() {
		return this.productColor;
	}

	public void setProductColor(String productColor) {
		this.productColor = productColor;
	}

	@Column(name = "product_price", nullable = false)
	public int getProductPrice() {
		return this.productPrice;
	}

	public void setProductPrice(int productPrice) {
		this.productPrice = productPrice;
	}

	@Column(name = "product_status")
	public Boolean getProductStatus() {
		return this.productStatus;
	}

	public void setProductStatus(Boolean productStatus) {
		this.productStatus = productStatus;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<Feedback> getFeedbacks() {
		return this.feedbacks;
	}

	public void setFeedbacks(List<Feedback> feedbacks) {
		this.feedbacks = feedbacks;
	}

	@JsonIgnore
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "DETAIL_PRODUCT", schema = "dbo", catalog = "HYNEE", joinColumns = {
			@JoinColumn(name = "product_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "detail_id", nullable = false, updatable = false) })
	public List<Detail> getDetails() {
		return this.details;
	}

	public void setDetails(List<Detail> details) {
		this.details = details;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<Image> getImages() {
		return this.images;
	}

	public void setImages(List<Image> images) {
		this.images = images;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<InvoiceDetail> getInvoiceDetails() {
		return this.invoiceDetails;
	}

	public void setInvoiceDetails(List<InvoiceDetail> invoiceDetails) {
		this.invoiceDetails = invoiceDetails;
	}

}
